library(R.matlab)
fileName = "data/simulated_time_series_2.R"
data <- readMat(fileName)
x <- data$x
y <- data$y
library(R.matlab)
fileName = "data/simulated_time_series_2.R"
data <- readMat(fileName)
fileName = "/data/simulated_time_series_2.R"
data <- readMat(fileName)
fileName = "/data/simulated_time_series_2.mat"
data <- readMat(fileName)
fileName = "data/simulated_time_series_2.mat"
data <- readMat(fileName)
fileName = "data/simulated_time_series.mat"
data <- readMat(fileName)
x <- data$x
y <- data$y
x
dim(x)
dim(y)
length(y)
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
t(matrix(seq(0, 1, length.out = 30)))
t(matrix(seq(0, 1, length.out = 562)))
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source("R/dataset.R")
source("R/enums.R")
source("R/ModelOptions.R")
testLoadDataFromMat <- function(){
library(R.matlab)
fileName = "data/simulated_time_series.mat"
data <- MyData$new()
data$setDataFromMat(fileName)
#print(data$m)
}
testLoadDataFromMat()
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
rm(list = ls())
source("R/dataset.R")
source("R/enums.R")
source("R/ModelOptions.R")
source("R/MixModel.R")
testLoadDataFromMat <- function(){
library(R.matlab)
fileName = "data/simulated_time_series.mat"
data <- MyData$new()
data$setDataFromMat(fileName)
#print(data$m)
}
testLoadDataFromMat()
testModelOptions <- function(){
n_tries=1
max_iter=1000
threshold <- 1e-5
verbose <- TRUE
verbose_IRLS <- TRUE
mixOptions <- ModelOptions(n_tries, max_iter, threshold, verbose, verbose_IRLS, variance_types$homoskedastic)
}
testModelOptions()
library(R.matlab)
fileName = "data/simulated_time_series.mat"
data <- MyData$new()
data$setDataFromMat(fileName)
K <- 3; #nombre de regimes
p <- 1; #dimension de beta (ordre de reg polynomiale)
q <- 1; #dimension de w (ordre de reg logistique)
mix <- MixModel(data,K,p,q)
source("R/MixModel.R")
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
rm(list = ls())
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
phi$phiBeta
testPhi <- function(){
library(R.matlab)
fileName = "data/simulated_time_series.mat"
data <- MyData$new()
data$setDataFromMat(fileName)
K <- 3; #nombre de regimes
p <- 1; #dimension de beta (ordre de reg polynomiale)
q <- 1; #dimension de w (ordre de reg logistique)
model <- MixModel(data,K,p,q)
phi <- Phi$new()
phi$setPhi1(model$x,model$p,model$q)
}
phi <- testPhi()
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
phi$phiBeta
phi$phiW
phi$phiBeta
library(R.matlab)
fileName = "data/simulated_time_series.mat"
data <- MyData$new()
data$setDataFromMat(fileName)
K <- 3; #nombre de regimes
p <- 1; #dimension de beta (ordre de reg polynomiale)
q <- 1; #dimension de w (ordre de reg logistique)
model <- MixModel(data,K,p,q)
phi <- Phi$new()
model$x
rm(list = ls())
source("R/dataset.R")
library(R.matlab)
fileName = "data/simulated_time_series.mat"
data <- MyData$new()
data$setDataFromMat(fileName)
data$x
source('~/Documents/git/RHLP_R/RHLP/R/test_functions.R')
phi$phiW
phi$phiBeta
